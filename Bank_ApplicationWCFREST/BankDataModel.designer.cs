#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bank_ApplicationWCFREST
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BankWcfRestApi")]
	public partial class BankDataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertHistoryTransaction(HistoryTransaction instance);
    partial void UpdateHistoryTransaction(HistoryTransaction instance);
    partial void DeleteHistoryTransaction(HistoryTransaction instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertPartnerAccount(PartnerAccount instance);
    partial void UpdatePartnerAccount(PartnerAccount instance);
    partial void DeletePartnerAccount(PartnerAccount instance);
    #endregion
		
		public BankDataModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BankWcfRestApiConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BankDataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankDataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankDataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankDataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<HistoryTransaction> HistoryTransactions
		{
			get
			{
				return this.GetTable<HistoryTransaction>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<PartnerAccount> PartnerAccounts
		{
			get
			{
				return this.GetTable<PartnerAccount>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private decimal _amount;
		
		private decimal _feeTransaction;
		
		private string _content;
		
		private long _senderAccountNumber;
		
		private long _receiverAccountNumber;
		
		private int _type;
		
		private System.DateTime _createAt;
		
		private System.DateTime _updateAt;
		
		private int _status;
		
		private string _billId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void OnfeeTransactionChanging(decimal value);
    partial void OnfeeTransactionChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnsenderAccountNumberChanging(long value);
    partial void OnsenderAccountNumberChanged();
    partial void OnreceiverAccountNumberChanging(long value);
    partial void OnreceiverAccountNumberChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OncreateAtChanging(System.DateTime value);
    partial void OncreateAtChanged();
    partial void OnupdateAtChanging(System.DateTime value);
    partial void OnupdateAtChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnbillIdChanging(string value);
    partial void OnbillIdChanged();
    #endregion
		
		public Transaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,0) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feeTransaction", DbType="Decimal(18,0) NOT NULL")]
		public decimal feeTransaction
		{
			get
			{
				return this._feeTransaction;
			}
			set
			{
				if ((this._feeTransaction != value))
				{
					this.OnfeeTransactionChanging(value);
					this.SendPropertyChanging();
					this._feeTransaction = value;
					this.SendPropertyChanged("feeTransaction");
					this.OnfeeTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_senderAccountNumber", DbType="BigInt NOT NULL")]
		public long senderAccountNumber
		{
			get
			{
				return this._senderAccountNumber;
			}
			set
			{
				if ((this._senderAccountNumber != value))
				{
					this.OnsenderAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._senderAccountNumber = value;
					this.SendPropertyChanged("senderAccountNumber");
					this.OnsenderAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverAccountNumber", DbType="BigInt NOT NULL")]
		public long receiverAccountNumber
		{
			get
			{
				return this._receiverAccountNumber;
			}
			set
			{
				if ((this._receiverAccountNumber != value))
				{
					this.OnreceiverAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._receiverAccountNumber = value;
					this.SendPropertyChanged("receiverAccountNumber");
					this.OnreceiverAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createAt", DbType="DateTime NOT NULL")]
		public System.DateTime createAt
		{
			get
			{
				return this._createAt;
			}
			set
			{
				if ((this._createAt != value))
				{
					this.OncreateAtChanging(value);
					this.SendPropertyChanging();
					this._createAt = value;
					this.SendPropertyChanged("createAt");
					this.OncreateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateAt", DbType="DateTime NOT NULL")]
		public System.DateTime updateAt
		{
			get
			{
				return this._updateAt;
			}
			set
			{
				if ((this._updateAt != value))
				{
					this.OnupdateAtChanging(value);
					this.SendPropertyChanging();
					this._updateAt = value;
					this.SendPropertyChanged("updateAt");
					this.OnupdateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string billId
		{
			get
			{
				return this._billId;
			}
			set
			{
				if ((this._billId != value))
				{
					this.OnbillIdChanging(value);
					this.SendPropertyChanging();
					this._billId = value;
					this.SendPropertyChanged("billId");
					this.OnbillIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _identityCard;
		
		private string _fullName;
		
		private string _email;
		
		private int _phoneNumber;
		
		private string _address;
		
		private System.DateTime _dob;
		
		private int _gender;
		
		private System.DateTime _createAt;
		
		private System.DateTime _updateAt;
		
		private long _accountId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidentityCardChanging(long value);
    partial void OnidentityCardChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneNumberChanging(int value);
    partial void OnphoneNumberChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OndobChanging(System.DateTime value);
    partial void OndobChanged();
    partial void OngenderChanging(int value);
    partial void OngenderChanged();
    partial void OncreateAtChanging(System.DateTime value);
    partial void OncreateAtChanged();
    partial void OnupdateAtChanging(System.DateTime value);
    partial void OnupdateAtChanged();
    partial void OnaccountIdChanging(long value);
    partial void OnaccountIdChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identityCard", DbType="BigInt NOT NULL")]
		public long identityCard
		{
			get
			{
				return this._identityCard;
			}
			set
			{
				if ((this._identityCard != value))
				{
					this.OnidentityCardChanging(value);
					this.SendPropertyChanging();
					this._identityCard = value;
					this.SendPropertyChanged("identityCard");
					this.OnidentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="Int NOT NULL")]
		public int phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date NOT NULL")]
		public System.DateTime dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Int NOT NULL")]
		public int gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createAt", DbType="DateTime NOT NULL")]
		public System.DateTime createAt
		{
			get
			{
				return this._createAt;
			}
			set
			{
				if ((this._createAt != value))
				{
					this.OncreateAtChanging(value);
					this.SendPropertyChanging();
					this._createAt = value;
					this.SendPropertyChanged("createAt");
					this.OncreateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateAt", DbType="DateTime NOT NULL")]
		public System.DateTime updateAt
		{
			get
			{
				return this._updateAt;
			}
			set
			{
				if ((this._updateAt != value))
				{
					this.OnupdateAtChanging(value);
					this.SendPropertyChanging();
					this._updateAt = value;
					this.SendPropertyChanged("updateAt");
					this.OnupdateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountId", DbType="BigInt NOT NULL")]
		public long accountId
		{
			get
			{
				return this._accountId;
			}
			set
			{
				if ((this._accountId != value))
				{
					this.OnaccountIdChanging(value);
					this.SendPropertyChanging();
					this._accountId = value;
					this.SendPropertyChanged("accountId");
					this.OnaccountIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoryTransaction")]
	public partial class HistoryTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _transactionId;
		
		private decimal _amount;
		
		private decimal _feeTransaction;
		
		private System.DateTime _createAt;
		
		private int _status;
		
		private long _accountNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntransactionIdChanging(long value);
    partial void OntransactionIdChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void OnfeeTransactionChanging(decimal value);
    partial void OnfeeTransactionChanged();
    partial void OncreateAtChanging(System.DateTime value);
    partial void OncreateAtChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnaccountNumberChanging(long value);
    partial void OnaccountNumberChanged();
    #endregion
		
		public HistoryTransaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionId", DbType="BigInt NOT NULL")]
		public long transactionId
		{
			get
			{
				return this._transactionId;
			}
			set
			{
				if ((this._transactionId != value))
				{
					this.OntransactionIdChanging(value);
					this.SendPropertyChanging();
					this._transactionId = value;
					this.SendPropertyChanged("transactionId");
					this.OntransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,0) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feeTransaction", DbType="Decimal(18,0) NOT NULL")]
		public decimal feeTransaction
		{
			get
			{
				return this._feeTransaction;
			}
			set
			{
				if ((this._feeTransaction != value))
				{
					this.OnfeeTransactionChanging(value);
					this.SendPropertyChanging();
					this._feeTransaction = value;
					this.SendPropertyChanged("feeTransaction");
					this.OnfeeTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createAt", DbType="DateTime NOT NULL")]
		public System.DateTime createAt
		{
			get
			{
				return this._createAt;
			}
			set
			{
				if ((this._createAt != value))
				{
					this.OncreateAtChanging(value);
					this.SendPropertyChanging();
					this._createAt = value;
					this.SendPropertyChanged("createAt");
					this.OncreateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountNumber", DbType="BigInt NOT NULL")]
		public long accountNumber
		{
			get
			{
				return this._accountNumber;
			}
			set
			{
				if ((this._accountNumber != value))
				{
					this.OnaccountNumberChanging(value);
					this.SendPropertyChanging();
					this._accountNumber = value;
					this.SendPropertyChanged("accountNumber");
					this.OnaccountNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _accountNumber;
		
		private string _pin;
		
		private string _salt;
		
		private decimal _balance;
		
		private System.DateTime _createAt;
		
		private System.DateTime _updateAt;
		
		private int _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaccountNumberChanging(long value);
    partial void OnaccountNumberChanged();
    partial void OnpinChanging(string value);
    partial void OnpinChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    partial void OnbalanceChanging(decimal value);
    partial void OnbalanceChanged();
    partial void OncreateAtChanging(System.DateTime value);
    partial void OncreateAtChanged();
    partial void OnupdateAtChanging(System.DateTime value);
    partial void OnupdateAtChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountNumber", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long accountNumber
		{
			get
			{
				return this._accountNumber;
			}
			set
			{
				if ((this._accountNumber != value))
				{
					this.OnaccountNumberChanging(value);
					this.SendPropertyChanging();
					this._accountNumber = value;
					this.SendPropertyChanged("accountNumber");
					this.OnaccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string pin
		{
			get
			{
				return this._pin;
			}
			set
			{
				if ((this._pin != value))
				{
					this.OnpinChanging(value);
					this.SendPropertyChanging();
					this._pin = value;
					this.SendPropertyChanged("pin");
					this.OnpinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string salt
		{
			get
			{
				return this._salt;
			}
			set
			{
				if ((this._salt != value))
				{
					this.OnsaltChanging(value);
					this.SendPropertyChanging();
					this._salt = value;
					this.SendPropertyChanged("salt");
					this.OnsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(18,0) NOT NULL")]
		public decimal balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createAt", DbType="DateTime NOT NULL")]
		public System.DateTime createAt
		{
			get
			{
				return this._createAt;
			}
			set
			{
				if ((this._createAt != value))
				{
					this.OncreateAtChanging(value);
					this.SendPropertyChanging();
					this._createAt = value;
					this.SendPropertyChanged("createAt");
					this.OncreateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateAt", DbType="DateTime NOT NULL")]
		public System.DateTime updateAt
		{
			get
			{
				return this._updateAt;
			}
			set
			{
				if ((this._updateAt != value))
				{
					this.OnupdateAtChanging(value);
					this.SendPropertyChanging();
					this._updateAt = value;
					this.SendPropertyChanged("updateAt");
					this.OnupdateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartnerAccount")]
	public partial class PartnerAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _partnerAccount1;
		
		private string _password;
		
		private string _salt;
		
		private long _accountNumber;
		
		private int _status;
		
		private System.DateTime _createAt;
		
		private System.DateTime _updateAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpartnerAccount1Changing(long value);
    partial void OnpartnerAccount1Changed();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    partial void OnaccountNumberChanging(long value);
    partial void OnaccountNumberChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OncreateAtChanging(System.DateTime value);
    partial void OncreateAtChanged();
    partial void OnupdateAtChanging(System.DateTime value);
    partial void OnupdateAtChanged();
    #endregion
		
		public PartnerAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="partnerAccount", Storage="_partnerAccount1", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long partnerAccount1
		{
			get
			{
				return this._partnerAccount1;
			}
			set
			{
				if ((this._partnerAccount1 != value))
				{
					this.OnpartnerAccount1Changing(value);
					this.SendPropertyChanging();
					this._partnerAccount1 = value;
					this.SendPropertyChanged("partnerAccount1");
					this.OnpartnerAccount1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string salt
		{
			get
			{
				return this._salt;
			}
			set
			{
				if ((this._salt != value))
				{
					this.OnsaltChanging(value);
					this.SendPropertyChanging();
					this._salt = value;
					this.SendPropertyChanged("salt");
					this.OnsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountNumber", DbType="BigInt NOT NULL")]
		public long accountNumber
		{
			get
			{
				return this._accountNumber;
			}
			set
			{
				if ((this._accountNumber != value))
				{
					this.OnaccountNumberChanging(value);
					this.SendPropertyChanging();
					this._accountNumber = value;
					this.SendPropertyChanged("accountNumber");
					this.OnaccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createAt", DbType="DateTime NOT NULL")]
		public System.DateTime createAt
		{
			get
			{
				return this._createAt;
			}
			set
			{
				if ((this._createAt != value))
				{
					this.OncreateAtChanging(value);
					this.SendPropertyChanging();
					this._createAt = value;
					this.SendPropertyChanged("createAt");
					this.OncreateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateAt", DbType="DateTime NOT NULL")]
		public System.DateTime updateAt
		{
			get
			{
				return this._updateAt;
			}
			set
			{
				if ((this._updateAt != value))
				{
					this.OnupdateAtChanging(value);
					this.SendPropertyChanging();
					this._updateAt = value;
					this.SendPropertyChanged("updateAt");
					this.OnupdateAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
